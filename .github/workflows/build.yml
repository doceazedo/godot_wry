on:
  push:
    branches: main
  pull_request:
    types: [opened, synchronize, reopened]
    branches: main

name: ü§ñ GDExtension

jobs:
  build:
    name: üèóÔ∏è Build / ${{ matrix.platform.os-name }}
    strategy:
      matrix:
        platform:
          - os-name: üêß Linux 64-bit
            runs-on: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os-name: üçé macOS ARM64
            runs-on: macos-latest
            target: aarch64-apple-darwin
          - os-name: ü™ü Windows 64-bit
            runs-on: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform.runs-on }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Install dependencies
        if: ${{ matrix.platform.target == 'x86_64-unknown-linux-gnu' }}
        run: sudo apt-get update && sudo apt-get install libgtk-3-dev libsoup-3.0-dev libwebkit2gtk-4.1-dev build-essential curl wget file libssl-dev libgtk-3-dev libayatana-appindicator3-dev librsvg2-dev libjavascriptcoregtk-4.1-dev
      - name: Build binaries
        uses: houseabsolute/actions-rust-cross@v1
        with:
          working-directory: "rust"
          command: "build"
          target: ${{ matrix.platform.target }}
          args: "--locked --release"
          strip: true
      - name: Build macOS-specific library
        if: ${{ matrix.platform.target == 'aarch64-apple-darwin' }}
        run: |
          mkdir rust/target/${{ matrix.platform.target }}/release/libgodot_wry.framework
          mv rust/target/${{ matrix.platform.target }}/release/libgodot_wry.dylib \
              rust/target/${{ matrix.platform.target }}/release/libgodot_wry.framework/libgodot_wry.dylib
          mkdir rust/target/${{ matrix.platform.target }}/release/libgodot_wry.framework/Resources
          cp assets/Info.plist rust/target/${{ matrix.platform.target }}/release/libgodot_wry.framework/Resources/Info.plist
      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.platform.target }}
          path: |
            rust/target/${{ matrix.platform.target }}/release/*.dll
            rust/target/${{ matrix.platform.target }}/release/*.so
            rust/target/${{ matrix.platform.target }}/release/*.dylib
            rust/target/${{ matrix.platform.target }}/release/*.framework

  zip:
    name: üì¶ Package
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Download binaries
        uses: actions/download-artifact@v4
        with:
          path: godot/addons/godot_wry/bin
      - name: Clean files
        run: |
          mkdir -p package/godot_wry
          mv godot/addons package/godot_wry
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: godot_wry
          path: package

  #TODO: release:
